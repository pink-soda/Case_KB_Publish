邮件主题：回复： [案例号: CAS-10387-B9Z9T1 ] % |P2|ICBC|工行反馈在V2020-L版本安装KB5030214补丁后打印异常 % 初次响应 CMIT:0001601

====第1封邮件====

发件人：Li Qi
发送时间：2023-11-29 17:00:36.249000+00:00
邮件内容:
许先生，您好：
如刚才电话沟通，我谨以此封邮件阐述我们双方针对这个问题所涉及范围界定： 
问题定义: 
用户反馈V2020-L版本系统安装KB5030214补丁后打印异常，报错代码为：0x80004005。
问题范围: 
我们将协助您分析处理上述问题，并对定义的问题给予最大的技术支持。 
如果能及时解决问题，或问题属于产品设计的行为，或问题涉及到三方，我们将考虑关闭案例。如果存在多个问题，则我们考虑拆分案例进行分析。 
接下来，我们将开始合作解决这个问题。如果您对以上的问题范围界定有任何异议，请尽快告知。如果您有其他任何疑问。也欢迎随时与我联系。 
下一步动作：
       请和用户确认，是否为网络打印机出现该问题，删除问题打印机后重新添加是否存在问题，如无法重新添加打印机，则该问题为远程共享访问问题，请检查远程共享开启的相关组策略是否被重置。具体项可参考附件内容。如组策略未被重置或可以正常添加打印机，但无法正常打印，请收集CMGElogcollector日志，供后续分析。

====第2封邮件====

发件人：Li Qi
发送时间：2023-12-01 11:22:15.025000+00:00
邮件内容:
唐女士，您好：
感谢您的接听，如刚才电话沟通，当前您遇到的问题为：“在安装23年9月累积更新（KB5030214）之后，用户使用照片应用打印文件时出现报错，此问题发生在部分打印机型上”。如有误解，请指出或补充。
麻烦您将实际遇到错误的截图发送给我看下。谢谢

====第3封邮件====

发件人：Li Qi
发送时间：2023-12-01 14:58:54.799000+00:00
邮件内容:
唐女士，您好：
请在问题电脑上做如下检查并更改，
*  检查如下注册表键值：
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters中的"AllowInsecureGuestAuth"，请检查该值是否为1，如为1，请将其更改为0
*  检查如下组策略是否定义，如定义，请更改等级为“仅发送NTLMV2响应”。，更改组策略后，请执行gpupdate /force刷新组策略生效
如上述更改无法解决此问题，请按以下步骤收取procmon日志：
1， 下载附件工具并保存至本地
2， 解压完成后，双击执行procmon64.exe
显示如下界面，并点击capture按钮，先暂停收集，准备进行捕获
点击clear按钮，清空当前窗口，重新点击capture按钮，开始捕获
再次点击capture按钮，复现问题步骤（即使用照片应用打开本地图片，点击打印后出现截图报错信息）后点击停止捕获
点击File menu, 点击Save. 选择"All events" and "Native Process Monitor Format (PML)"点击OK，并将此文件回传给许工，许工会发给我进行分析

====第4封邮件====

发件人：Li Qi
发送时间：2023-12-07 10:11:04.187000+00:00
邮件内容:
FYI

====第5封邮件====

发件人：Li Qi
发送时间：2023-12-08 17:02:01.208000+00:00
邮件内容:
Hi，
好的，已收到。有结果和您联系，谢谢。

====第6封邮件====

发件人：Li Qi
发送时间：2023-12-12 10:57:05.161000+00:00
邮件内容:
唐女士，您好：
根据您的日志分析，可以看到photos应用在调用打印机时，需要在本地查找已安装的打印机驱动，路径为：c:\windows\system32\spool\drivers，但是接下来在通过相关驱动的dll文件在本地应用时无法找到对应的注册信息，进而导致退出。
接下来，请先备份c:\windows\system32\spool文件夹的内容，然后删除三个子文件夹drivers，prtprocs和PRINTERS的内容，之后重新安装打印机驱动（如有最新驱动，请至Lexmark官网下载最新该打印机型号的驱动程序进行安装）。
执行上述操作后仍然无法正常打印的话，请卸载补丁后，抓取照片应用可以正常打印过程的procmon日志，用于对比分析。
另外，请下载工具CMGELogCollectorV2至本地，下载路径为：https://cduc.cmgos.com/download.php?id=1178&token=yvIIzaJT9PWSwYJbjqGWnX8oMzqEkJaw <https://cduc.cmgos.com/download.php?id=1178&token=yvIIzaJT9PWSwYJbjqGWnX8oMzqEkJaw> 
点击“收集”按钮，收集系统日志并发送给我，谢谢。具体步骤如下：
CMGELogCollector：
解压后运行CMGELogCollector.exe，保持默认勾选，点击“收集”，运行几分钟后会在桌面生成日志压缩包。

====第7封邮件====

发件人：Li Qi
发送时间：2023-12-12 11:19:37.360000+00:00
邮件内容:
Hi，唐女士：
如刚才电话沟通，请至如下网址下载：https://www.pantum.cn/support/download/driver/

====第8封邮件====

发件人：Li Qi
发送时间：2023-12-14 11:23:28.565000+00:00
邮件内容:
您好：
已收到您的附件，请将我上封邮件中提到的CMGELogCollector收集的日志也一并传给我吧，谢谢
请下载工具CMGELogCollectorV2至本地，下载路径为：https://cduc.cmgos.com/download.php?id=1178&token=yvIIzaJT9PWSwYJbjqGWnX8oMzqEkJaw <https://cduc.cmgos.com/download.php?id=1178&token=yvIIzaJT9PWSwYJbjqGWnX8oMzqEkJaw> 
点击“收集”按钮，收集系统日志并发送给我，谢谢。具体步骤如下：
CMGELogCollector：
解压后运行CMGELogCollector.exe，保持默认勾选，点击“收集”，运行几分钟后会在桌面生成日志压缩包。

====第9封邮件====

发件人：Li Qi
发送时间：2023-12-20 16:35:23.070000+00:00
邮件内容:
唐女士，您好：
如刚才电话沟通，接下来我们还是需要重新收取下以下场景的日志，即：安装补丁后，不同打印机正常打印和异常打印的过程的对比日志，分别记录下打印机的型号和操作时间。要求：在同一photo应用的窗口进程下切换不同的打印机场景
需要收集的日志有如下三类，分别是：ETL，Procmon，TTD，请按以下步骤执行。
1， 在C盘新建一个目录 (C:\mstrace)，将之前的Process Monitor工具解压后拷贝到C:\mstrace；再在C盘新建一个目录(c:\temp)，为之后收取TTD做准备
2.	ETL和procmon的日志收集工作：
以管理员打开一个CMD（或者将附件的txt文件，更改后缀为bat后，以管理员身份执行也可以），输入以下的命令开启日志收集：
cd /d C:\mstrace
procmon /backingfile C:\mstrace\logfile.pml /AcceptEula /Minimized /Quiet  
logman create trace "printscan_print1" -ow -o c:\printscan_print1.etl -p "Microsoft-Windows-PrintService" 0xffffffffffffffff 0xff -nb 16 16 -bs 1024 -mode Circular -f bincirc -max 4096 -ets
logman update trace "printscan_print1" -p {C9BF4A08-D547-4D11-8242-E03A18B5BE01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A01-D547-4D11-8242-E03A18B5BE01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A06-D547-4D11-8242-E03A18B5BE01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A04-D547-4D11-8242-E03A18B5BE01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A02-D547-4D11-8242-E03A18B5BE01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A03-D547-4D11-8242-E03A18B5BE01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A9F-D547-4D11-8242-E03A18B5BE01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A9E-D547-4D11-8242-E03A18B5BE01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A05-D547-4D11-8242-E03A18B5BE01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {EE7E960D-5E42-4C28-8F61-D8FA8B0DD84D} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {CE444D6A-F287-4977-BBBD-89A0DD65B71D} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {D34AE79A-15FB-44F9-9FD8-3098E6FFFD49} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {27239FD0-425E-11D8-9E39-000039252FD8} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {F4DF4FA4-66C2-4C14-ABB1-19D099D7E213} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {7663DA2F-1594-4C33-83DD-D5C64BBED68A} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {AAED978E-5B0C-4F71-B35C-16E9C0794FF9} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {9677DFEF-EACF-4173-8977-FFB0086B11E6} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p "Microsoft-Windows-PrintBRM" 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {301CCC25-D58B-4C5E-B6A5-15BCF8B0077F} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A9E-D547-4D11-8242-E03A18B5BEEE} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {04160794-60B6-4EC7-96FF-4953691F94AA} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {3EA31F33-8F51-481D-AEB7-4CA37AB12E48} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p "Microsoft-Windows-Spooler-LPDSVC" 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {9E6D0D9B-1CE5-44B5-8B98-F32ED89077EC} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {F30FAB8E-84BB-48D4-8E80-F8967EF0FE6A} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p "Microsoft-Windows-Spooler-LPRMON" 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {5ED940EB-18F9-4227-A454-8EF1CE5B3272} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {99F5F45C-FD1E-439F-A910-20D0DC759D28} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p "Microsoft-Windows-SpoolerTCPMon" 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {62A0EB6C-3E3E-471D-960C-7C574A72534C} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {9558985E-3BC8-45EF-A2FD-2E6FF06FB886} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {836767A6-AF31-4938-B4C0-EF86749A9AEF} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {7672778D-86FE-41D0-85C8-82CAA8CE6168} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {6D1E0446-6C52-4B85-840D-D2CB10AF5C63} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {B795C7DF-07BC-4362-938E-E8ABD81A9A01} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {09737B09-A25E-44D8-AA75-07F7572458E2} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {34F7D4F8-CD95-4B06-8BF6-D929DE4AD9DE} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {B42BD277-C2BA-468B-AB3D-05B1A1714BA3} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {A83C80B9-AE01-4981-91C6-94F00C0BB8AA} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {EB4C6075-0B67-4A79-A0A3-7CD9DF881194} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {0ED38D2B-4ACC-4E23-A8EC-D0DACBC34637} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {301CCC25-D58B-4C5E-B6A5-15BCF8B0077F} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {C9BF4A9E-D547-4D11-8242-E03A18B5BEEE} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p {3EA31F33-8F51-481D-AEB7-4CA37AB12E48} 0xffffffffffffffff 0xff -ets
logman update trace "printscan_print1" -p "Microsoft-Windows-Spooler-LPDSVC" 0xffffffffffffffff 0xff -ets
3，  TTD启动
管理员身份打开cmd，跳转到TTD工具的解压路径，运行如下两条指令，其中PID需替换成Microsoft.Photo.exe（您的电脑上显示的照片应用版本的进程名称）的进程ID（任务管理器-详细信息中查看）
tttracer -attach <PID> -dumpfull
tttracer -onlaunch PrintDiaglog.exe -out c:\temp\
4，            复现问题（打印问题，要求：在同一photo应用的窗口进程下切换不同的打印机场景）
5，  TTD 停止
取消勾选弹出窗口的“tracing on” 选框即可（应该有两个进程的选框，分别取消）
tttracer此时会自动停止，并执行如下命令确认tttracer已停止
tttracer.exe -stop all
tttracer.exe -delete all
6， 运行以下命令行停止并收集procmon和ETL日志：
procmon /terminate
logman stop "printscan_print1" -ets 
7， 在客户端上以管理员方式运行CMD，并输入下面的命令收集系统日志：
msinfo32 /nfo C:\mstrace\SYSSUM.NFO /categories +systemsummary
wevtutil epl System C:\mstrace\system.evtx
wevtutil epl Application C:\mstrace\app.evtx
wmic qfe list > C:\mstarce\1.txt
gpresult /h c:\mstrace\gp.html
最后，将TTD文件夹中的.run文件，c盘temp文件夹中的.run文件和c:\mstrace文件夹压缩后发送给我分析，谢谢。

====第10封邮件====

发件人：Li Qi
发送时间：2023-12-25 13:18:42.849000+00:00
邮件内容:
您好：
请问您是否有电话方便沟通？方便的话可以留下您的电话，以便我和您联系。关于您提到的问题，请参照以下内容：
1.	tttracer -onlaunch PrintDiaglog.exe -out c:/temp/指令执行后没有弹出采集框，也没有日志文件在temp生成。
-onlaunch参数是指在PrintDiaglog进程开始启动时进行采集，在我们之前收集的日志中，该进程在出现打印错误阶段才会开启，因此他并不是第一时间开启，直到出现问题前才会出现采集框。此时在问题出现后取消勾选tracing on才会记录该进程的日志信息。
2.tttracer -attach pid -dumpfull指令采集不能正常打印机时会出现闪退的现象，照片进程被直接关闭，不确定采集是否成功。
您说的这个情况只发生在正常打印机的场景下么？是在取消勾选tracing on之前出现闪退和进程关闭的情况还是之后？
3． 采集日志文件过大，单个文件5g左右
由于我们现在抓取的无论是.run还是.etl还是.pml文件都是问题复现整个过程的记录日志，因此确实可能出现您说的这种情况，这与您的复现操作时间有关，是正常的，您可以在全部收取之后进行分卷压缩再上传或者您可以提供其他的上传地址给我，我再想办法下载。谢谢

====第11封邮件====

发件人：Li Qi
发送时间：2024-01-11 10:28:38.714000+00:00
邮件内容:
您好：
当前问题的关键点在于printdialog进程的行为，但我们此次抓取的日志并未包含相关信息，所以可能还需要咱们再重新抓取一次，好的场景和坏的场景我们分开抓取，每个场景包括：TTD+procmon两部分。请按照如下步骤操作：
---好的场景---
1. 打开photo，调出打印窗口，这时候Microsoft.photo进程的PID和PrintDialog进程的PID均可从任务管理器中查看到
2.管理员打开两个cmd窗口，分别执行如下指令，同时开启Microsoft.photo进程和PrintDialog进程的TTD
tttracer -attach <PID> -dumpfull
等待小窗口弹出，如下实例以iexplorer为例
3.开启procmon
4.切换至可成功打印的打印机
5.停止procmon并取消勾选弹出窗口的“tracing on” 选框即可（应该有两个进程的选框，分别取消），然后 tttrace 就会自动停止，并执行如下命令确认tttracer已停止
tttracer.exe -stop all tttracer.exe -delete all
---坏的场景---
1. 打开photo，调出打印窗口，这时候Microsoft.photo进程的PID和PrintDialog进程的PID均可从任务管理器中查看到
2.管理员打开两个cmd窗口，分别执行如下指令，同时开启Microsoft.photo进程和PrintDialog进程的TTD
tttracer -attach <PID> -dumpfull
等待小窗口弹出，如下实例以iexplorer为例
3.开启procmon
4.切换至失败闪退的打印机（若程序自动退出，则可能TTD会自动停止）
5.停止procmon并取消勾选弹出窗口的“tracing on” 选框即可（应该有两个进程的选框，分别取消），然后 tttrace 就会自动停止，并执行如下命令确认tttracer已停止
tttracer.exe -stop all tttracer.exe -delete all

====第12封邮件====

发件人：Li Qi
发送时间：2024-01-17 17:24:56.341000+00:00
邮件内容:
Hi, All:
当前问题的分析结果如下，请参考：
问题时刻异常点发生在CalculatePrintableArea相关处理上，而其处理过程中getdevcaps部分有被schk_x64 hook。另外好坏场景用的驱动也有所不同，你的异常场景中Pantum CP2257DN HBP 使用的是UNIDRV驱动执行绘图关联操作，而RICOH MP 3555 PCL 6_2用的是并非UNIDRV.dll，简单来讲就是好坏场景在这部分处理逻辑不同
PrintDialog TTD:
DbgID ThreadID      User Kernel Position      Approx. System Time                       COM-Initialized
5     25d8 (0n9688)   0s     0s 00431DF3:0072 Thursday, January 11, 2024 2:56:56.391 AM ApartmentType_MTA
 # Call Site
 0 PrintDialog!wil::details::ReportFailure+0x0
 1 PrintDialog!wil::details::ReportFailure_Hr+0x44
 2 PrintDialog!wil::details::in1diag3::_Throw_Hr+0x25
 3 PrintDialog!wil::details::in1diag3::Throw_IfFailed+0x1a9
 4 PrintDialog!<lambda_361a11138f2d753fa3792d41da618c5f>::operator()+0x384
 5 PrintDialog!Concurrency::details::_SelectorTaskGenerator<Concurrency::details::_TypeSelectorNoAsync,Windows::Foundation::HResult>::_GenerateTask_0::__l2::<lambda_66bda433bab03bd3f5b88a24ea8a1f1a>::operator()+0xc
 6 PrintDialog!std::_Callable_obj<<lambda_66bda433bab03bd3f5b88a24ea8a1f1a>,0>::_ApplyX+0xc
 7 PrintDialog!std::_Func_impl<std::_Callable_obj<<lambda_66bda433bab03bd3f5b88a24ea8a1f1a>,0>,std::allocator<std::_Func_class<Windows::Foundation::HResult,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil> >,Windows::Foundation::HResult,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::_Do_call+0x12
 8 PrintDialog!std::_Func_class<Windows::Foundation::HResult,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil,std::_Nil>::operator()+0x19
 9 PrintDialog!Concurrency::task<Windows::Foundation::HResult>::_InitialTaskHandle<Windows::Foundation::HResult,<lambda_66bda433bab03bd3f5b88a24ea8a1f1a>,Concurrency::details::_TypeSelectorNoAsync>::_Init+0x104
 a PrintDialog!Concurrency::task<Windows::Foundation::HResult>::_InitialTaskHandle<Windows::Foundation::HResult,<lambda_66bda433bab03bd3f5b88a24ea8a1f1a>,Concurrency::details::_TypeSelectorNoAsync>::_Perform+0x8
 b PrintDialog!Concurrency::details::_PPLTaskHandle<Windows::Foundation::HResult,Concurrency::task<Windows::Foundation::HResult>::_InitialTaskHandle<Windows::Foundation::HResult,<lambda_66bda433bab03bd3f5b88a24ea8a1f1a>,Concurrency::details::_TypeSelectorNoAsync>,pplx::details::_UnrealizedChore>::operator()+0x70
 c PrintDialog!Custom::_RunChoreBridge+0x21
 d PrintDialog!Windows::System::Threading::WorkItemHandler::[Windows::System::Threading::WorkItemHandler::__abi_IDelegate]::__abi_Windows_System_Threading_WorkItemHandler___abi_IDelegate____abi_Invoke+0x34
 e threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::CommonWorkCallback+0xaa
 f threadpoolwinrt!Windows::System::Threading::CThreadPoolWorkItem::BatchedCallback+0xac
10 ntdll!TppWorkpExecuteCallback+0x130
11 ntdll!TppWorkerThread+0x644
12 KERNEL32!BaseThreadInitThunk+0x14
13 ntdll!RtlUserThreadStart+0x21
PrintDialog!<lambda_361a11138f2d753fa3792d41da618c5f>::operator()+0x384:
00007ffc`9c992594 cc              int     3
@r14              this = 0x0000027f`ef4a0788
000000cf`11bff690 bindPrinterActivity = class PrintDialogTelemetry::BindPrinterActivity
((PrintDialog!PrintDialog::DataModel::DeviceModel *)0x27fef144e10)                 : 0x27fef144e10 
    [+0x028] _deviceId        : 0x27fef05ce50 : \\?\SWD#PRINTENUM#{7C5B9B89-B6EE-4955-AAE0-B6A61B83D065}#{0ecef634-6ef0-472a-8085-5ad023ecbccd} <file://%3f/SWD%23PRINTENUM%23%7b7C5B9B89-B6EE-4955-AAE0-B6A61B83D065%7d%23%7b0ecef634-6ef0-472a-8085-5ad023ecbccd%7d>  
    [+0x030] _deviceName      : 0x27fef0705c0 : "Pantum CP2257DN HBP" [Type: Platform::String *]
    [+0x038] _displayName     : 0x27fef06fd00 : "Pantum CP2257DN HBP" [Type: Platform::String *]
PrintDialog!wil::details::ReportFailure:
000000cf`11bff5c8 hr = 0x80004005
Photo TTD:
DbgID ThreadID       User Kernel Position      Approx. System Time
2     2808 (0n10248)   0s     0s 00097EF2:0000 Thursday, January 11, 2024 2:56:56.440 AM
 # Call Site                                                                                                                    Info
 0 ntdll!RtlRaiseException+0x0 
 1 ntdll!vDbgPrintExWithPrefixInternal+0x232
 2 ntdll!DbgPrint+0x3c 
 3 KERNELBASE!OutputDebugStringA+0x1b6
 4 schk_x64!UnSetWinHook+0x3067 
 5 schk_x64+0x263c3 
 6 prntvpt!PTOpenProviderExImp+0x96 
 7 prntvpt!PTOpenProviderImp+0x37 
 8 prntvpt!CPrintTicketServerBase::Bind+0x1c
 9 prntvpt!PTOpenProvider+0xfb 
 a PrintPlatformConfig!PrintPlatform::HPTProviderRAII::{ctor}+0x20
 b PrintPlatformConfig!PrintPlatform::MergePrintTicketWithDefault+0x159
 c PrintPlatformConfig!<lambda_ac9c7b545bc881a9f3b8336bf076cb3a>::operator()+0xbb
 d PrintPlatformConfig!PrintCore::CaptureAndConvertExceptionToHR<<lambda_ac9c7b545bc881a9f3b8336bf076cb3a> >+0x17
 e PrintPlatformConfig!PrintPlatform::PrintPlatformPrintSchemaFactoryLegacy::CreatePrintSchemaTicket+0x12c
 f Windows_Graphics_Printing!Windows::Graphics::Printing::OptionDetails::PrintTaskOptionDetailsServer::PrintTaskOptionsServerTransaction::BindPrinter+0x2bd
10 Windows_Graphics_Printing!Windows::Graphics::Printing::PrintTaskServer::PrintTaskServerPriv::BindPrinter+0x241
11 RPCRT4!Invoke+0x73 
12 RPCRT4!Ndr64StubWorker+0xb4a 
13 RPCRT4!NdrStubCall3+0xc9 
14 combase!CStdStubBuffer_Invoke+0x5f
15 RPCRT4!CStdStubBuffer_Invoke+0x3b
16 combase!InvokeStubWithExceptionPolicyAndTracing::__l6::<lambda_76d9e92c799d246a4afbe64a2bf5673d>::operator()+0x18
17 combase!ObjectMethodExceptionHandlingAction<<lambda_76d9e92c799d246a4afbe64a2bf5673d> >+0x43
18 combase!InvokeStubWithExceptionPolicyAndTracing+0xa8
19 combase!DefaultStubInvoke+0x1c4 
1a combase!SyncStubCall::Invoke+0x22
1b combase!SyncServerCall::StubInvoke+0x26
1c combase!StubInvoke+0x265 
1d combase!ServerCall::ContextInvoke+0x435
1e combase!CServerChannel::ContextInvoke+0x70
1f combase!DefaultInvokeInApartment+0xad
20 combase!AppInvoke+0x200 
21 combase!ComInvokeWithLockAndIPID+0xc17
22 combase!ThreadInvoke+0x1f60 
23 RPCRT4!DispatchToStubInCNoAvrf+0x18
24 RPCRT4!RPC_INTERFACE::DispatchToStubWorker+0x1a0
25 RPCRT4!RPC_INTERFACE::DispatchToStub+0x98
26 RPCRT4!RPC_INTERFACE::DispatchToStubWithObject+0x160
27 RPCRT4!LRPC_SBINDING::DispatchToStubWithObject+0x1f
28 RPCRT4!LRPC_SCALL::DispatchRequest+0x16f
29 RPCRT4!LRPC_SCALL::QueueOrDispatchCall+0x125
2a RPCRT4!LRPC_SCALL::HandleRequest+0x7fa                                                                                       Client: PID: 0x20f8 TID: 0x25d8
2b RPCRT4!LRPC_SASSOCIATION::HandleRequest+0x200
2c RPCRT4!LRPC_ADDRESS::HandleRequest+0x341
2d RPCRT4!LRPC_ADDRESS::ProcessIO+0x8a2
2e RPCRT4!LrpcIoComplete+0xc5 
2f ntdll!TppAlpcpExecuteCallback+0x260
30 ntdll!TppWorkerThread+0x3c8 
31 KERNEL32!BaseThreadInitThunk+0x14
32 ntdll!RtlUserThreadStart+0x21 
DbgID ThreadID       User Kernel Position      Approx. System Time
2     2808 (0n10248)   0s     0s 003F89C1:0000 Thursday, January 11, 2024 2:57:14.147 AM
# Call Site
0 ntdll!RtlRaiseException+0x0
1 ntdll!vDbgPrintExWithPrefixInternal+0x232
2 ntdll!DbgPrint+0x3c
3 KERNELBASE!OutputDebugStringA+0x1b6
4 schk_x64!UnSetWinHook+0x3067
5 schk_x64+0x25533
6 UNIDRVUI!UniDrvUI::CalculatePrintableArea+0xd8
7 UNIDRVUI!UniDrvUI::CoreDriverPrintableArea+0x76
8 UNIDRVUI!UniDrvUI::CPrintTicketProvider::GenerateCoreDriverPrintCapabilities+0x338
9 UNIDRVUI!UniDrvUI::CPrintTicketProvider::GetPrintCapabilities+0x9c
a prntvpt!PTGetPrintCapabilitiesImp+0x128
b prntvpt!TProviderInfo::GetSupportedFeaturesList+0x65
c prntvpt!PTMergeAndValidatePrintTicketImp+0x1bf
d prntvpt!CPrintTicketServerBase::MergeAndValidatePrintTicket+0x9f
e prntvpt!PTMergeAndValidatePrintTicket+0x99
f PrintPlatformConfig!PrintPlatform::MergePrintTicketWithDefault+0x236
10 PrintPlatformConfig!<lambda_ac9c7b545bc881a9f3b8336bf076cb3a>::operator()+0xbb
11 PrintPlatformConfig!PrintCore::CaptureAndConvertExceptionToHR<<lambda_ac9c7b545bc881a9f3b8336bf076cb3a> >+0x17
Browse full module list
start             end                 module name
00007ffc`9d130000 00007ffc`9d1b5000   schk_x64   (export symbols)       schk_x64.dll
    Loaded symbol image file: schk_x64.dll
    Image path: C:\WINDOWS\System32\schk_x64.dll
    Image name: schk_x64.dll
    Browse all global symbols  functions  data
    Timestamp:        Fri Feb  3 11:25:24 2023 (63DC7EA4)
    CheckSum:         0008F525
    ImageSize:        00085000
    File version:     6.0.0.0
    Product version:  6.0.0.0
    File flags:       0 (Mask 3F)
    File OS:          40004 NT Win32
    File type:        2.0 Dll
    File date:        00000000.00000000
    Translations:     0404.04b0
    Information from resource tables:
        CompanyName:      
        ProductName:      GSC Desktop terminal security management platform
        InternalName:     
        OriginalFilename: 
        ProductVersion:   6.0.0.0
        FileVersion:      6.0.0.0
        PrivateBuild:     
        SpecialBuild:     
        FileDescription:  GSC FILE
        LegalCopyright:   (C)GeneralSoft Corporation. All rights reserved.
===下一步方案===
1.临时卸载TMS，查看photo中使用Pantum CP2257DN HBP打印预览是否仍有异常
2.若第一步方案执行后仍有异常，检查环境中使用UNIDRV.dll的打印机是否有在photo打印预览好的场景，关于查看打印机是否用到UNIDRV.dll，您可参考如下Print Management截图，具体方法为：按Win+R，在输入框中输入“printmanagement.msc”，点击“打印服务器”-“本地”-“驱动程序”，右键选择右侧列表中打印机的“属性”，查看驱动程序文件，是否为UNIDRV.DLL
3.若存在使用UNIDRV.dll ，photo 程序打印预览好的打印机选项，我们需要对此场景捕获一份TTD（printdialog+photo）做为好的基准以做比对，另外移除schk_x64驱动后还有问题的话，也请同步再上传一份问题场景TTD（printdialog+photo）

====第13封邮件====

发件人：Li Qi
发送时间：2024-01-23 10:21:12.826000+00:00
邮件内容:
唐女士，您好：
       如昨天电话沟通，当前此问题判断为23年7B累积更新导致的功能性bug导致，经您的确认，您已知悉此情况，该问题将做归档处理，以下为案例总结：
Case No：CAS-10387-B9Z9T1
问题描述：
=================
反馈V2020-L版本系统安装KB5030214补丁后打印异常，报错代码为：0x80004005。需要协助分析处理
问题分析：
=================
      经日志分析与代码查询，发现自23年7B的累积更新安装之后，当使用unidrv关联打印驱动做图片预览时，处理逻辑进行了优化，这一优化导致BindPrinter绘图预览时检测到CreateDC失败进而导致异常，这是发生当前问题的根本原因，安装后续补丁也会优化该处理逻辑。该问题属于累积更新补丁带来的功能性bug，受影响范围包括：基于1809版本的V 2020-L和基于21H2版本的V2022-L。
针对此问题，目前可供您参考的处理方法有两种：
1.	不使用照片应用进行图片打印。
2.	联系打印机厂商更新打印机驱动或更换打印机，不使用unidrv.dll作为打印驱动程序文件的打印机进行照片应用内的打印。作为参考，您可以使用如下方法确认当前打印机所使用的驱动程序文件。
具体方法为：按Win+R，在输入框中输入“printmanagement.msc”，点击“打印服务器”-“本地”-“驱动程序”，右键选择右侧列表中打印机的“属性”，查看驱动程序文件，是否为UNIDRV.DLL
案例总结：
=================
经用户确认，用户已知悉上述情况。经用户同意，该case将做归档处理，如有其他问题，可随时联系我们，谢谢。
