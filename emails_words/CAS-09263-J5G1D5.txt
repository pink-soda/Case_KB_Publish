邮件主题：回复: 回复: 【外来邮件，注意核实】回复: [案例号: CAS-09263-J5G1D5 ] % |P2|ICBC|工行win10无法更新补丁问题 % 初次响应 CMIT:0001881

====第1封邮件====

发件人：win10技术支持
发送时间：2023-06-29 14:14:02.836000+00:00
邮件内容:
​日志已上传
​
​
​☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
中国工商银行软件开发中心（珠海）
许  翔
系统一部
电话：17606669571
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ 
​
________________________________
	-----原始邮件-----
	
====第2封邮件====

发件人：win10技术支持
发送时间：2023-07-03 17:32:56.537000+00:00
邮件内容:
贾工，目前测试都是正常，iis日志还未获取到，其他日志还需要提供什么呢？
​
​
​☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
中国工商银行软件开发中心（珠海）
许  翔
系统一部
电话：17606669571
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ 
​
________________________________
	-----原始邮件-----
	
====第3封邮件====

发件人：win10技术支持
发送时间：2023-07-07 15:10:55.281000+00:00
邮件内容:
​443端口不通，其他的都是通的。
​
​
​☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
中国工商银行软件开发中心（珠海）
许  翔
系统一部
电话：17606669571
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ 
​
________________________________
	-----原始邮件-----
	
====第4封邮件====

发件人：win10技术支持
发送时间：2023-07-10 15:36:44.169000+00:00
邮件内容:
​已重启iis，问题依旧，端口情况如下，请协助分析问题原因。
​
​
​☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
中国工商银行软件开发中心（珠海）
许  翔
系统一部
电话：17606669571
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ 
​
________________________________
	-----原始邮件-----
	
====第5封邮件====

发件人：win10技术支持
发送时间：2023-07-11 15:55:09.608000+00:00
邮件内容:
​日志已上传。
​
​
​☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
中国工商银行软件开发中心（珠海）
许  翔
系统一部
电话：17606669571
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ 
​
________________________________
	-----原始邮件-----
	
====第6封邮件====

发件人：win10技术支持
发送时间：2023-07-14 14:31:07.870000+00:00
邮件内容:
​贾工，按照如下方式访问，结果如下。
​
​
​☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆
中国工商银行软件开发中心（珠海）
许  翔
系统一部
电话：17606669571
☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆ 
​
________________________________
	-----原始邮件-----
	
====第7封邮件====

发件人：Jia Wei
发送时间：2023-08-08 15:43:04.629000+00:00
邮件内容:
许先生，您好
根据之前沟通得知客户端操作命令后问题依旧，您可以参考2023年7月31日 9:56的邮件内容，收集NM和服务器端IIS日志，以便进一步查看。
--------------

====第8封邮件====

发件人：Jia Wei
发送时间：2023-08-17 14:16:01.317000+00:00
邮件内容:
许先生，您好
从NM日志看，服务器端一直在 reset 客户端发送的请求，原因是等待超时。根据以往经验问题大概率是服务器端回传给客户端的数据比较大，超时导致连接被重置了。
客户端与服务器端交互过程中，服务器端会传输包含配置的xml文件至客户端，客户端检索此文件下载符合版本的patch。
但如果服务器端patch或配置过多就会导致此文件变大，从而引发此问题。
建议操作：
针对此问题，还需要对WSUS及数据库进行维护操作
在开始 WSUS 维护之前：
A.	下载并安装“SQL Server Management Studio (SSMS) <https://learn.microsoft.com/zh-cn/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver16> （https://aka.ms/ssmsfullsetup）”以后，连接到 <https://aka.ms/ssmsfullsetup%EF%BC%89%E2%80%9D%E5%B9%B6%E8%BF%9E%E6%8E%A5%E5%88%B0>  WSUS 的数据库（SUSDB）。
*	登录 SSMS 并选择数据库 SUSDB：示例中为如何登录 SSMS ，在服务器运行 Windows 内部数据库 (WID)的情境下。
*	右键单击 Microsoft SQL Server Management Studio 18 > 更多 > 以管理员身份运行 <图例1>：
<图例1>
*	输入服务器名称 <图例2>：\\.\pipe\MICROSOFT##WID\tsql\query <file://./pipe/MICROSOFT%23%23WID/tsql/query> 
<图例2>
*	选择 Windows 身份验证并单击连接。
B.    在开始数据库清理之前，您可以考虑备份WSUS 数据库。
完整数据库备份 - SQL Server | Microsoft Learn <https://learn.microsoft.com/zh-cn/sql/relational-databases/backup-restore/create-a-full-database-backup-sql-server?view=sql-server-ver16> 
C.    清理WSUS 数据库时最好停止WSUS 服务，否则可能会导致数据库损坏。<图例3>
<图例3>
D.	如果查询“EXEC spGetObsoleteUpdatesToCleanup”返回 1,000 行 <图例4>，则数据库清理可能需要 4 小时以上才能完成，并且时间会根据数据库的性能而增加。 请为您的停机时间做好准备。
<图例4>
E.	如果 WSUS 基础架构中存在上下游关系（非副本模式），请先从下游服务器开始清理。
开始正式 WSUS 维护：
1)    打开一个新建查询“New Query”并执行“Execute”以下语句来添加索引： 
USE [SUSDB] 
GO 
CREATE NONCLUSTERED INDEX [idx_tbLocalizedPropertyForRevisionOA] ON [dbo] . [tbLocalizedPropertyForRevision] ( [LocalizedPropertyID] ) 
CREATE NONCLUSTERED INDEX [idx_tbRevisionSupersedesUpdateOA] ON [dbo] . [tbRevisionSupersedesUpdate] ( SupersededUpdateID )
2)    继续打开一个新建查询“New Query”并执行“Execute”以下语句：
USE SUSDB 
DECLARE @var1 INT 
DECLARE @msg nvarchar(100) 
CREATE TABLE #results (Col1 INT) INSERT INTO #results(Col1) 
EXEC spGetObsoleteUpdatesToCleanup 
DECLARE WC Cursor FOR SELECT Col1 FROM #results 
OPEN WC 
FETCH NEXT FROM WC INTO @var1 WHILE (@@FETCH_STATUS > -1) 
BEGIN SET @msg = 'Deleting ' + CONVERT(varchar(10), @var1) RAISERROR(@msg,0,1) WITH NOWAIT 
EXEC spDeleteUpdate @localUpdateID=@var1 
FETCH NEXT FROM WC INTO @var1 
END 
CLOSE WC 
DEALLOCATE WC 
DROP TABLE #results
3)    新建查询“New Query”并执行“Execute”以下语句，重新索引 WSUS 数据库（如果 WSUS 数据库维护不当，大型 WSUS 部署的性能将随着时间的推移而降低）：
USE SUSDB; 
GO 
SET NOCOUNT ON; 
-- Rebuild or reorganize indexes based on their fragmentation levels 
DECLARE @work_to_do TABLE ( 
    objectid int 
    , indexid int 
    , pagedensity float 
    , fragmentation float 
    , numrows int 
) 
DECLARE @objectid int; 
DECLARE @indexid int; 
DECLARE @schemaname nvarchar(130);  
DECLARE @objectname nvarchar(130);  
DECLARE @indexname nvarchar(130);  
DECLARE @numrows int 
DECLARE @density float; 
DECLARE @fragmentation float; 
DECLARE @command nvarchar(4000);  
DECLARE @fillfactorset bit 
DECLARE @numpages int 
-- Select indexes that need to be defragmented based on the following 
-- * Page density is low 
-- * External fragmentation is high in relation to index size 
PRINT 'Estimating fragmentation: Begin. ' + convert(nvarchar, getdate(), 121)  
INSERT @work_to_do 
SELECT 
    f.object_id 
    , index_id 
    , avg_page_space_used_in_percent 
    , avg_fragmentation_in_percent 
    , record_count 
FROM  
    sys.dm_db_index_physical_stats (DB_ID(), NULL, NULL , NULL, 'SAMPLED') AS f 
WHERE 
    (f.avg_page_space_used_in_percent < 85.0 and f.avg_page_space_used_in_percent/100.0 * page_count < page_count - 1) 
    or (f.page_count > 50 and f.avg_fragmentation_in_percent > 15.0) 
    or (f.page_count > 10 and f.avg_fragmentation_in_percent > 80.0) 
PRINT 'Number of indexes to rebuild: ' + cast(@@ROWCOUNT as nvarchar(20)) 
PRINT 'Estimating fragmentation: End. ' + convert(nvarchar, getdate(), 121) 
SELECT @numpages = sum(ps.used_page_count) 
FROM 
    @work_to_do AS fi 
    INNER JOIN sys.indexes AS i ON fi.objectid = i.object_id and fi.indexid = i.index_id 
    INNER JOIN sys.dm_db_partition_stats AS ps on i.object_id = ps.object_id and i.index_id = ps.index_id 
-- Declare the cursor for the list of indexes to be processed. 
DECLARE curIndexes CURSOR FOR SELECT * FROM @work_to_do 
-- Open the cursor. 
OPEN curIndexes 
-- Loop through the indexes 
WHILE (1=1) 
BEGIN 
    FETCH NEXT FROM curIndexes 
    INTO @objectid, @indexid, @density, @fragmentation, @numrows; 
    IF @@FETCH_STATUS < 0 BREAK; 
    SELECT  
        @objectname = QUOTENAME(o.name) 
        , @schemaname = QUOTENAME(s.name) 
    FROM  
        sys.objects AS o 
        INNER JOIN sys.schemas as s ON s.schema_id = o.schema_id 
    WHERE  
        o.object_id = @objectid; 
    SELECT  
        @indexname = QUOTENAME(name) 
        , @fillfactorset = CASE fill_factor WHEN 0 THEN 0 ELSE 1 END 
    FROM  
        sys.indexes 
    WHERE 
        object_id = @objectid AND index_id = @indexid; 
    IF ((@density BETWEEN 75.0 AND 85.0) AND @fillfactorset = 1) OR (@fragmentation < 30.0) 
        SET @command = N'ALTER INDEX ' + @indexname + N' ON ' + @schemaname + N'.' + @objectname + N' REORGANIZE'; 
    ELSE IF @numrows >= 5000 AND @fillfactorset = 0 
        SET @command = N'ALTER INDEX ' + @indexname + N' ON ' + @schemaname + N'.' + @objectname + N' REBUILD WITH (FILLFACTOR = 90)'; 
    ELSE 
        SET @command = N'ALTER INDEX ' + @indexname + N' ON ' + @schemaname + N'.' + @objectname + N' REBUILD'; 
    PRINT convert(nvarchar, getdate(), 121) + N' Executing: ' + @command; 
    EXEC (@command); 
    PRINT convert(nvarchar, getdate(), 121) + N' Done.'; 
END 
-- Close and deallocate the cursor. 
CLOSE curIndexes; 
DEALLOCATE curIndexes; 
IF EXISTS (SELECT * FROM @work_to_do) 
BEGIN 
    PRINT 'Estimated number of pages in fragmented indexes: ' + cast(@numpages as nvarchar(20)) 
    SELECT @numpages = @numpages - sum(ps.used_page_count) 
    FROM 
        @work_to_do AS fi 
        INNER JOIN sys.indexes AS i ON fi.objectid = i.object_id and fi.indexid = i.index_id 
        INNER JOIN sys.dm_db_partition_stats AS ps on i.object_id = ps.object_id and i.index_id = ps.index_id 
    PRINT 'Estimated number of pages freed: ' + cast(@numpages as nvarchar(20)) 
END 
GO 
--Update all statistics 
PRINT 'Updating all statistics.' + convert(nvarchar, getdate(), 121)  
EXEC sp_updatestats 
PRINT 'Done updating statistics.' + convert(nvarchar, getdate(), 121)  
GO
4.	在 Windows PowerShell 控制台（以管理员身份运行）中，运行“Set-ExecutionPolicy unrestricted”以允许 PS1 脚本在 PowerShell 中运行。<图例5>
<图例5>
5.	完成后，需要在 PowerShell 中运行以下脚本（以管理员权限）（该脚本已经附加到此电子邮件附件中，请将文件后缀从 *.txt 更改为 *.ps1）以清理过时的更新： <图例6>
.\Decline-SupersededUpdatesWithExclusionPeriod.ps1 -UpdateServer <FQDN of WSUS> -Port <Port of WSUS> 
例如1：.\Decline-SupersededUpdatesWithExclusionPeriod.ps1 -UpdateServer SUPSERVER.CONTOSO.COM -Port 80 
<图例6>
如果您在运行 PowerShell脚本时超时或报告错误，您还可以返回 SSMS 选择 SUSDB 数据库，在新建查询中执行以下语句进行清理：
-- Decline superseded updates in SUSDB; alternative to Decline-SupersededUpdatesWithExclusionPeriod.ps1 
DECLARE @thresholdDays INT = 90 -- Specify the number of days between today and the release date for which the superseded updates must not be declined (i.e., updates older than 90 days). This should match configuration of supersedence rules in SUP component properties, if ConfigMgr is being used with WSUS. 
DECLARE @testRun BIT = 0 -- Set this to 1 to test without declining anything. 
-- There shouldn't be any need to modify anything after this line. 
DECLARE @uid UNIQUEIDENTIFIER 
DECLARE @title NVARCHAR(500) 
DECLARE @date DATETIME 
DECLARE @userName NVARCHAR(100) = SYSTEM_USER 
DECLARE @count INT = 0 
DECLARE DU CURSOR FOR 
  SELECT MU.UpdateID, U.DefaultTitle, U.CreationDate FROM vwMinimalUpdate MU 
  JOIN PUBLIC_VIEWS.vUpdate U ON MU.UpdateID = U.UpdateId 
WHERE MU.IsSuperseded = 1 AND MU.Declined = 0 AND MU.IsLatestRevision = 1 
  AND MU.CreationDate < DATEADD(dd,-@thresholdDays,GETDATE()) 
ORDER BY MU.CreationDate 
PRINT 'Declining superseded updates older than ' + CONVERT(NVARCHAR(5), @thresholdDays) + ' days.' + CHAR(10) 
OPEN DU 
FETCH NEXT FROM DU INTO @uid, @title, @date 
WHILE (@@FETCH_STATUS > - 1) 
BEGIN 
  SET @count = @count + 1 
  PRINT 'Declining update ' + CONVERT(NVARCHAR(50), @uid) + ' (Creation Date ' + CONVERT(NVARCHAR(50), @date) + ') - ' + @title + ' ...' 
  IF @testRun = 0 
     EXEC spDeclineUpdate @updateID = @uid, @adminName = @userName, @failIfReplica = 1 
  FETCH NEXT FROM DU INTO @uid, @title, @date 
END 
CLOSE DU 
DEALLOCATE DU 
PRINT CHAR(10) + 'Attempted to decline ' + CONVERT(NVARCHAR(10), @count) + ' updates.' 
6)    最后，在 WSUS 控制台上运行 “WSUS 服务器清理向导”以删除更新。 <图例7>
<图例7>
--------------

====第9封邮件====

发件人：Jia Wei
发送时间：2023-08-28 10:00:34.807000+00:00
邮件内容:
许先生，您好
很高兴与您沟通，根据沟通的结果，我将暂时归档此问题。案例归档后您会收到调查问卷的邮件，希望可以对我们的服务进行评价。
案例总结：
案例描述：
分行win10终端1809无法正常获取补丁，已查验网络和端口都是正常的，wsus指向也是正常的，请协助分析问题原因。
案例进展：
按照建议操作，对WSUS服务器进行清理操作，删除WSUS计算机列表后问题不再复现。归档案例
--------------
